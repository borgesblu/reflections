How did viewing a diff between two versions of a file help you see the bug that
was introduced?
    It was easier to indentify what was edited in the code and I was able to 
    focus directly on the lines that caused the error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
    You can see the history of modification that this file has suffered and
    you can avoid possible troubles that this file already had. 
    And also, discovery what modification caused the new behavior on the code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
    Couns: you need to pay attention and remember to commit the changes
    respecting the logical changes, otherwise, you can lost rastreability of each
    change.

    Pros: you win more rastreability of the changes and it's more easy to come back
    a previous version of the code if necessary

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
    It depends of the purpose of each version control system. In the Git case,
    the purpose is control the files that can have connection one each other.

How can you use the commands git log and git diff to view the history of files?
    It's useful for identify when the changes occurred, 
    who changed and why it was changed.

How might using version control make you more confident to make changes that
could break something?
    It's easier to identify what was de changed that caused the error and 
    easier to come back to the point that the program was working.

Now that you have your workspace set up, what do you want to try using Git for?
    I want to use in a real case where I get a existing file and 
    I change something of it and I commit this change.
